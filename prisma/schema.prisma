generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth User Model
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?   // Added password field
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Custom Models for Your Application
model Project {
  id                       String        @id @default(cuid())
  name                     String        @default(cuid())
  createdAt                DateTime      @default(now())
  updatedAt                DateTime      @updatedAt
  userId                   String
  user                     User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  configuration            Configuration?
  enableFormatting         Boolean       @default(true)
  enableLinting            Boolean       @default(true)
  enablePerformanceChecks  Boolean       @default(false)
  enableSecurityChecks     Boolean       @default(true)
  eqeqeq                   Boolean       @default(true)
  indent                   Int           @default(2)
  jsdoc                    Boolean       @default(true)
  maxLineLength            Int           @default(80)
  noConsole                Boolean       @default(true)
  noUnusedVars             Boolean       @default(true)
  quotes                   String        @default("single")
  tabSize                  Int           @default(2)
}

model Configuration {
  id              String   @id @default(cuid())
  tabSpace        Int      @default(2)
  useJsDocs       Boolean  @default(false)
  useSemicolons   Boolean  @default(true)
  useSingleQuotes Boolean  @default(true)
  projectId       String   @unique
  project         Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  apiKey          ApiKey?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model ApiKey {
  id              String        @id @default(cuid())
  key             String        @unique
  configurationId String        @unique
  configuration   Configuration @relation(fields: [configurationId], references: [id], onDelete: Cascade)
  createdAt       DateTime      @default(now())
  expiresAt       DateTime?
  lastUsed        DateTime?
}